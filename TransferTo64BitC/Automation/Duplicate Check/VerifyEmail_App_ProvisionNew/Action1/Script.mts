'------------------------------------------------------------------
'   Description   	  :      Determines whether the most recent lot resulted in an error by means of checking the Duplicate Check inbox for error notifications
'								In this case, emails are expected, since the lot has been entered without handling the duplicates.
'   Project           :      Uniseries Duplicate Check Dual Format
'   Author            :      Paul F.
'   © 2018   Systech International.  All rights reserved
'------------------------------------------------------------------
'   
'   Prologue:
'   - Lot has been processed by server and attempted to have been closed.
'   
'   Epilogue:
'   - All server-sent email notifications, if any, have been processed and the results have been held against the expected outcomes



'Function to take email out of Outlook into Text file
systemutil.Run "C:\Automation\Duplicate Check\EmailScrapperPoll.py", "True"

'Polling the email folder until the scrapper is finished running (until python shell closes)
'Aborts if script has not completed after 1.5 minutes
Dim count
count = 0

'Wait for script to start (for existence of python shell)
'Should abort after 10(?) seconds (I think)
Do While Window("C:\Windows\py.exe").Exist(1) = False AND count < 5
	Wait(1)
	count = count + 1
Loop 

'Resetting counter for next wait
count = 0

Do
	Wait(30)
	count = count + 1
Loop While Window("C:\Windows\py.exe").Exist(1) AND count < 20

'Loop through all of the generated text files, checking for the first instance of the desired string.
'Note: requires an initially empty inbox, ensure that script clears the emails at beginning of test.
Dim bEmailFound
bEmailFound = False
ExpectedString = "Warning:  UniSeries has detected a condition where serial numbers to be imported into Guardian system appear to be duplicated."

Set FSO = CreateObject("Scripting.FileSystemObject")
Set FilesObj = FSO.GetFolder("C:\Automation\Duplicate Check\Emails").Files


For Each Files in FilesObj
	Set TextFile = FSO.OpenTextFile(Files.Path)
	EntireString = TextFile.ReadAll
	If InStr (1, EntireString, ExpectedString, vbTextCompare) Then
		bEmailFound = True
	End If
	TextFile.Close
Next


If bEmailFound Then
    LogResult Environment("Results_File"), True, dtStartTime, Now(), "Email Validation", "UNSS-3159", "Validate the email", "Email received as expected"
Else
    LogResult Environment("Results_File"), False, dtStartTime, Now(), "Email Validation", "UNSS-3159", "Validate the email", "Email is not received"
End If

Set FilesObj = Nothing
Set FSO = Nothing


'
''Run sql to check for dupes
'SystemUtil.Run "C:\nonsfda_sg1.bat" 
'
''Read data from logfile.txt generated by batch file
'Set TextFile = fso.OpenTextFile("C:\logfile.txt")
'EntireString = TextFile.ReadAll
'ExpectedString = "(0 rows affected)"
'
'    If InStr ( 1, EntireString, ExpectedString, vbTextCompare) Then
'      LogResult Environment("Results_File"), True, dtStartTime, Now(), "Database Validation", "UNSS-3159", "Validate database via sql", "Database is"
'    Else
'      LogResult Environment("Results_File"), False, dtStartTime, Now(), "Database Validation", "UNSS-3159", "Validate database via sql", "Email is not received"
'    End If
'TextFile.Close
'
'
''Delete logfile
'Set objFSO = CreateObject("Scripting.FileSystemObject")
'objFSO.DeleteFile("C:\logfile.txt") 
